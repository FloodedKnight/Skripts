# a fancier sphere made by using the golden ratio to get points
# more evenly distributed points than basicSphere
function fibonacciSphere(center: location, radius: number, point-count: number = 500) :: locations:
    # golden ratio
    set {_phi} to 3.1415 * (3 - sqrt(5))
    # y and step
    set {_y} to 1
    set {_y-step} to 2 / {_point-count}
    # convert degrees to radians
    set {_radians-to-degrees} to 180 / 3.1415
    # set up points
    loop {_point-count} times:
        set {_r} to sqrt(1 - {_y}^2) * {_radius}
        set {_angle} to {_phi} * loop-number * {_radians-to-degrees}
        set {_x} to {_r} * cos({_angle})
        set {_z} to {_r} * sin({_angle})
        set {_points::%loop-number%} to {_center} ~ vector({_x}, {_y} * {_radius}, {_z})
        set {_y} to {_y} - {_y-step}

    # return list of locations
    return {_points::*}

function aSphere(l: location, t3: num, t4: num):
	loop {_t4} times:
		loop {_t4} times:
			set {_v} to spherical vector radius {_t3}, yaw loop-value-1*360/{_t4}, pitch loop-value-2*360/{_t4}
			draw 1 of bubble at {_l} ~ {_v} with extra 0.4
	
on right click:
	name of player's tool contains "&9Water Staff &8| &bBubble":
		{pvptoggle.%player's uuid%.pvptoggle} is not the player
		if difference between now and {WaterSphere.%player's uuid%.WaterSphere} is less than 120 seconds:
			cancel event
			message "&8[&câœ–&8] &cBubble is on cooldown! &8(%difference between {WaterSphere.%player's uuid%.WaterSphere} and (120 seconds before now)%)" to player
		else:
			set {WaterSphere.%player's uuid%.WaterSphere} to now
			play sound "entity.player.splash.high_speed" at pitch 1 to player
			loop 100 times:
				set {_loc} to location 6 meters in front of and 1.3 meters above the player
#				show water bubble at fibonacciSphere({_loc}, 2, 500)
				aSphere({_loc}, 2, 20)
				loop all players in radius 2.3 around {_loc} where [input is not the player]:
					loop-player's gamemode is survival
					set {TrappedinWaterSphere::%loop-player's uuid%} to loop-player
					if "%region at {_loc}%" contains "main":
						teleport {TrappedinWaterSphere::%loop-player's uuid%} to {_loc}
				wait 3 ticks
			delete {TrappedinWaterSphere::*}
			
command /sendtrapped:
	permission: sk.dev
	trigger:
		loop {TrappedinWaterSphere::*}:
			message "&3- %loop-value%" to player
		stop
		
command /sphere:
	permission: sk.dev
	trigger:
		draw 1 dust using dustOption(rgb(3, 161, 252), 1) at fibonacciSphere(location 5 in front of player, 2, 500)